# Generated by Django 5.2 on 2025-05-07 22:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Unnamed Agency', max_length=200)),
                ('npi_number', models.CharField(default='0000000000', max_length=10, unique=True)),
                ('tax_id', models.CharField(default='00-0000000', max_length=20, unique=True)),
                ('address', models.TextField(default='Address not provided')),
                ('phone', models.CharField(default='Phone not provided', max_length=20)),
                ('email', models.EmailField(default='email@notprovided.com', max_length=254)),
                ('website', models.URLField(blank=True, null=True)),
                ('hipaa_compliance_date', models.DateField(null=True)),
                ('hipaa_compliance_officer', models.CharField(max_length=100, null=True)),
                ('hipaa_compliance_contact', models.EmailField(max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CertificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_medicaid_certified', models.BooleanField(default=False)),
                ('is_hospice_certified', models.BooleanField(default=False)),
                ('is_private_duty', models.BooleanField(default=False)),
                ('required_training_hours', models.IntegerField(default=0)),
                ('renewal_cycle_months', models.IntegerField(default=12)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('is_agency_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('agency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='caregivers.agency')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Caregiver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('specialties', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('inactive', 'Inactive'), ('on_leave', 'On Leave'), ('terminated', 'Terminated')], default='pending', max_length=20)),
                ('is_medicaid_certified', models.BooleanField(default=False)),
                ('is_hospice_certified', models.BooleanField(default=False)),
                ('is_private_duty', models.BooleanField(default=False)),
                ('hipaa_training_date', models.DateField(blank=True, null=True)),
                ('hipaa_training_expiry', models.DateField(blank=True, null=True)),
                ('hipaa_compliance_status', models.BooleanField(default=False)),
                ('hipaa_compliance_notes', models.TextField(blank=True)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('last_password_change', models.DateTimeField(blank=True, null=True)),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('account_locked_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='caregivers.agency')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_caregivers', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_caregivers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=100)),
                ('organization', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('caregiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='caregivers.caregiver')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=2, unique=True)),
                ('abbreviation', models.CharField(max_length=2, unique=True)),
                ('region', models.CharField(choices=[('NORTHEAST', 'Northeast'), ('MIDWEST', 'Midwest'), ('SOUTH', 'South'), ('WEST', 'West')], max_length=50)),
                ('timezone', models.CharField(max_length=50)),
                ('medicaid_program_name', models.CharField(blank=True, max_length=100)),
                ('medicaid_website', models.URLField(blank=True)),
                ('licensing_board_name', models.CharField(blank=True, max_length=100)),
                ('licensing_website', models.URLField(blank=True)),
                ('licensing_phone', models.CharField(blank=True, max_length=20)),
                ('licensing_email', models.EmailField(blank=True, max_length=254)),
                ('training_hours_required', models.IntegerField(default=0)),
                ('renewal_cycle_months', models.IntegerField(default=12)),
                ('requires_background_check', models.BooleanField(default=True)),
                ('requires_fingerprinting', models.BooleanField(default=False)),
                ('requires_medicaid_cert', models.BooleanField(default=False)),
                ('requires_surety_bond', models.BooleanField(default=False)),
                ('min_bond_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('background_check_validity_months', models.IntegerField(default=12)),
                ('fingerprinting_validity_months', models.IntegerField(default=12)),
                ('medicaid_cert_validity_months', models.IntegerField(default=12)),
                ('surety_bond_validity_months', models.IntegerField(default=12)),
                ('requires_continuing_education', models.BooleanField(default=False)),
                ('continuing_education_hours_required', models.IntegerField(default=0)),
                ('continuing_education_cycle_months', models.IntegerField(default=12)),
                ('requires_cpr_certification', models.BooleanField(default=True)),
                ('cpr_cert_validity_months', models.IntegerField(default=12)),
                ('requires_first_aid_certification', models.BooleanField(default=True)),
                ('first_aid_cert_validity_months', models.IntegerField(default=12)),
                ('requires_tb_test', models.BooleanField(default=True)),
                ('tb_test_validity_months', models.IntegerField(default=12)),
                ('requires_flu_shot', models.BooleanField(default=True)),
                ('requires_covid_vaccination', models.BooleanField(default=True)),
                ('requires_drug_test', models.BooleanField(default=True)),
                ('drug_test_validity_months', models.IntegerField(default=12)),
                ('requires_physical_exam', models.BooleanField(default=True)),
                ('physical_exam_validity_months', models.IntegerField(default=12)),
                ('requires_auto_insurance', models.BooleanField(default=True)),
                ('min_auto_insurance_coverage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('requires_liability_insurance', models.BooleanField(default=True)),
                ('min_liability_insurance_coverage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('requires_workers_comp_insurance', models.BooleanField(default=True)),
                ('requires_health_insurance', models.BooleanField(default=True)),
                ('requires_disability_insurance', models.BooleanField(default=True)),
                ('requires_life_insurance', models.BooleanField(default=True)),
                ('min_life_insurance_coverage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('requires_emergency_contact', models.BooleanField(default=True)),
                ('requires_emergency_backup', models.BooleanField(default=True)),
                ('requires_availability_schedule', models.BooleanField(default=True)),
                ('requires_service_area_definition', models.BooleanField(default=True)),
                ('requires_vehicle_registration', models.BooleanField(default=True)),
                ('requires_drivers_license', models.BooleanField(default=True)),
                ('requires_vehicle_inspection', models.BooleanField(default=True)),
                ('vehicle_inspection_validity_months', models.IntegerField(default=12)),
                ('requires_vehicle_maintenance_log', models.BooleanField(default=True)),
                ('requires_incident_reporting', models.BooleanField(default=True)),
                ('requires_medication_administration_training', models.BooleanField(default=True)),
                ('requires_infection_control_training', models.BooleanField(default=True)),
                ('requires_emergency_procedures_training', models.BooleanField(default=True)),
                ('requires_cultural_competency_training', models.BooleanField(default=True)),
                ('requires_abuse_prevention_training', models.BooleanField(default=True)),
                ('requires_confidentiality_training', models.BooleanField(default=True)),
                ('requires_hipaa_training', models.BooleanField(default=True)),
                ('hipaa_training_validity_months', models.IntegerField(default=12)),
                ('requires_osha_training', models.BooleanField(default=True)),
                ('osha_training_validity_months', models.IntegerField(default=12)),
                ('requires_bloodborne_pathogens_training', models.BooleanField(default=True)),
                ('bloodborne_pathogens_training_validity_months', models.IntegerField(default=12)),
                ('requires_fire_safety_training', models.BooleanField(default=True)),
                ('fire_safety_training_validity_months', models.IntegerField(default=12)),
                ('requires_emergency_evacuation_training', models.BooleanField(default=True)),
                ('emergency_evacuation_training_validity_months', models.IntegerField(default=12)),
                ('requires_disaster_preparedness_training', models.BooleanField(default=True)),
                ('disaster_preparedness_training_validity_months', models.IntegerField(default=12)),
                ('notes', models.TextField(blank=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['code'], name='caregivers__code_8252e7_idx'), models.Index(fields=['name'], name='caregivers__name_4cb1f8_idx'), models.Index(fields=['region'], name='caregivers__region_ef7616_idx')],
            },
        ),
        migrations.CreateModel(
            name='CaregiverStateLicense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=50)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('verification_status', models.CharField(choices=[('pending', 'Pending Verification'), ('verified', 'Verified'), ('failed', 'Verification Failed'), ('expired', 'Verification Expired')], default='pending', max_length=20)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True)),
                ('caregiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='caregivers.caregiver')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='caregivers.state')),
            ],
            options={
                'unique_together': {('caregiver', 'state')},
            },
        ),
        migrations.AddField(
            model_name='caregiver',
            name='states_licensed',
            field=models.ManyToManyField(blank=True, through='caregivers.CaregiverStateLicense', to='caregivers.state'),
        ),
        migrations.CreateModel(
            name='AgencyStateLicense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=50)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('verification_status', models.CharField(choices=[('pending', 'Pending Verification'), ('verified', 'Verified'), ('failed', 'Verification Failed'), ('expired', 'Verification Expired')], default='pending', max_length=20)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='caregivers.agency')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='caregivers.state')),
            ],
        ),
        migrations.AddField(
            model_name='agency',
            name='states_licensed',
            field=models.ManyToManyField(through='caregivers.AgencyStateLicense', to='caregivers.state'),
        ),
        migrations.CreateModel(
            name='StateWaiverProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program_name', models.CharField(max_length=200)),
                ('administering_agency', models.CharField(max_length=200)),
                ('services_offered', models.TextField()),
                ('unique_requirements', models.TextField(blank=True)),
                ('annual_training_requirements', models.TextField(blank=True)),
                ('effective_date', models.DateField(blank=True, null=True)),
                ('registry_name', models.CharField(blank=True, max_length=200)),
                ('registry_update_frequency', models.CharField(blank=True, max_length=50)),
                ('required_forms', models.TextField(blank=True)),
                ('future_requirements', models.TextField(blank=True)),
                ('future_requirements_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waiver_programs', to='caregivers.state')),
            ],
            options={
                'ordering': ['state', 'program_name'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(choices=[('view', 'View'), ('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('export', 'Export')], max_length=10)),
                ('model_name', models.CharField(max_length=100)),
                ('record_id', models.CharField(max_length=100)),
                ('ip_address', models.GenericIPAddressField(null=True)),
                ('user_agent', models.TextField(null=True)),
                ('changes', models.JSONField(null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='caregivers__timesta_12c46e_idx'), models.Index(fields=['user', 'action'], name='caregivers__user_id_42f754_idx'), models.Index(fields=['model_name', 'record_id'], name='caregivers__model_n_478c88_idx')],
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('expired', 'Expired'), ('revoked', 'Revoked'), ('suspended', 'Suspended')], default='pending', max_length=20)),
                ('document', models.FileField(blank=True, null=True, upload_to='certifications/')),
                ('verification_status', models.CharField(choices=[('pending', 'Pending Verification'), ('verified', 'Verified'), ('failed', 'Verification Failed'), ('expired', 'Verification Expired')], default='pending', max_length=20)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True)),
                ('training_hours_completed', models.IntegerField(default=0)),
                ('background_check_date', models.DateField(blank=True, null=True)),
                ('fingerprinting_date', models.DateField(blank=True, null=True)),
                ('medicaid_cert_date', models.DateField(blank=True, null=True)),
                ('surety_bond_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('surety_bond_expiry', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_verified_at', models.DateTimeField(blank=True, null=True)),
                ('verification_source', models.CharField(blank=True, max_length=100)),
                ('caregiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='caregivers.caregiver')),
                ('cert_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='caregivers.certificationtype')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='caregivers.state')),
            ],
            options={
                'ordering': ['-issue_date'],
                'indexes': [models.Index(fields=['status', 'verification_status'], name='caregivers__status_07414b_idx'), models.Index(fields=['expiry_date'], name='caregivers__expiry__487d2c_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='caregiver',
            index=models.Index(fields=['status'], name='caregivers__status_1498fe_idx'),
        ),
        migrations.AddIndex(
            model_name='caregiver',
            index=models.Index(fields=['agency'], name='caregivers__agency__d0340e_idx'),
        ),
        migrations.AddIndex(
            model_name='caregiver',
            index=models.Index(fields=['hipaa_compliance_status'], name='caregivers__hipaa_c_4d0a21_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='agencystatelicense',
            unique_together={('agency', 'state')},
        ),
        migrations.AddIndex(
            model_name='statewaiverprogram',
            index=models.Index(fields=['state'], name='caregivers__state_i_93d746_idx'),
        ),
        migrations.AddIndex(
            model_name='statewaiverprogram',
            index=models.Index(fields=['program_name'], name='caregivers__program_433f75_idx'),
        ),
        migrations.AddIndex(
            model_name='statewaiverprogram',
            index=models.Index(fields=['effective_date'], name='caregivers__effecti_2673ea_idx'),
        ),
        migrations.AddIndex(
            model_name='statewaiverprogram',
            index=models.Index(fields=['future_requirements_date'], name='caregivers__future__9a3824_idx'),
        ),
    ]
